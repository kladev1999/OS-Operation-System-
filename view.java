
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author KLA
 */
public class view extends javax.swing.JFrame {

    private int count;
    private int count2;
    private int count22;
    private int count222;
    static int i = 0;
    int r;
    Timer iotime = new Timer();
    Timer clocktime = new Timer();
    Timer clocktime2 = new Timer();
    Timer clocktime3 = new Timer();
    Controller controller = new Controller();
    Model model = new Model();
    Model ready;

    /**
     * Creates new form view
     */
    public view() {

        initComponents();
        ClockTime(model);
        ClockioTime(model);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane5 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable7 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnterminate = new javax.swing.JButton();
        btnadd = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        avgW = new javax.swing.JLabel();
        avgT = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        MainPCB = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tb_monitor = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        Endmoniter = new javax.swing.JButton();
        addiomonitor = new javax.swing.JButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        tb_Printter = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        addio_Printter = new javax.swing.JButton();
        EndioPrintter = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tb_RunCPU = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_IOQ = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        tbl_IOQ2 = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tb_Terminat = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tb_Ready = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        time = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jProgressBar = new javax.swing.JProgressBar();

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane5.setViewportView(jTable5);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jTable7.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane7.setViewportView(jTable7);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Priority Preemtive");

        jPanel2.setBackground(new java.awt.Color(252, 163, 17));

        jLabel1.setBackground(new java.awt.Color(20, 33, 61));
        jLabel1.setFont(new java.awt.Font("Constantia", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(20, 33, 61));
        jLabel1.setText("Priority Preemtive");

        btnterminate.setBackground(new java.awt.Color(255, 255, 255));
        btnterminate.setFont(new java.awt.Font("Unispace", 0, 11)); // NOI18N
        btnterminate.setForeground(new java.awt.Color(255, 128, 0));
        btnterminate.setText("Terminate");
        btnterminate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnterminateActionPerformed(evt);
            }
        });

        btnadd.setBackground(new java.awt.Color(20, 33, 61));
        btnadd.setFont(new java.awt.Font("Unispace", 0, 12)); // NOI18N
        btnadd.setForeground(new java.awt.Color(252, 163, 17));
        btnadd.setText("Add Process");
        btnadd.setToolTipText("");
        btnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Constantia", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(20, 33, 61));
        jLabel9.setText("AVG Waiting time: ");

        jLabel10.setFont(new java.awt.Font("Constantia", 1, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(20, 33, 61));
        jLabel10.setText("AVG Turnaround time:");

        avgW.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 24)); // NOI18N
        avgW.setForeground(new java.awt.Color(20, 33, 61));
        avgW.setText("AVG");

        avgT.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 24)); // NOI18N
        avgT.setForeground(new java.awt.Color(20, 33, 61));
        avgT.setText("AVG");

        MainPCB.setBackground(new java.awt.Color(20, 33, 61));
        MainPCB.setFont(new java.awt.Font("Consolas", 1, 21)); // NOI18N
        MainPCB.setForeground(new java.awt.Color(252, 163, 17));
        MainPCB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ProcessID", "State", "Burst time", "Waiting Time", "I/O time", "Priority", "Arrivaltime", "Memory"
            }
        ));
        MainPCB.setMinimumSize(new java.awt.Dimension(120, 10));
        MainPCB.setRowHeight(26);
        jScrollPane6.setViewportView(MainPCB);

        jLabel12.setFont(new java.awt.Font("Constantia", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(20, 33, 61));
        jLabel12.setText("Memory Storage");

        jPanel3.setBackground(new java.awt.Color(20, 33, 61));

        tb_monitor.setBackground(new java.awt.Color(252, 163, 17));
        tb_monitor.setFont(new java.awt.Font("Unispace", 1, 12)); // NOI18N
        tb_monitor.setForeground(new java.awt.Color(20, 33, 61));
        tb_monitor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ProcessID", "State", "ioTime"
            }
        ));
        tb_monitor.setRowHeight(22);
        jScrollPane8.setViewportView(tb_monitor);

        jLabel8.setFont(new java.awt.Font("Constantia", 0, 26)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(252, 163, 17));
        jLabel8.setText("Monitor ");

        Endmoniter.setFont(new java.awt.Font("Unispace", 0, 11)); // NOI18N
        Endmoniter.setForeground(new java.awt.Color(20, 33, 61));
        Endmoniter.setText("End I/O");
        Endmoniter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EndmoniterActionPerformed(evt);
            }
        });

        addiomonitor.setFont(new java.awt.Font("Unispace", 0, 11)); // NOI18N
        addiomonitor.setForeground(new java.awt.Color(20, 33, 61));
        addiomonitor.setText("Add I/O");
        addiomonitor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addiomonitorActionPerformed(evt);
            }
        });

        tb_Printter.setBackground(new java.awt.Color(252, 163, 17));
        tb_Printter.setFont(new java.awt.Font("Unispace", 1, 12)); // NOI18N
        tb_Printter.setForeground(new java.awt.Color(20, 33, 61));
        tb_Printter.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ProcessID", "State", "ioTime"
            }
        ));
        tb_Printter.setRowHeight(22);
        jScrollPane9.setViewportView(tb_Printter);

        jLabel7.setFont(new java.awt.Font("Constantia", 0, 26)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(252, 163, 17));
        jLabel7.setText("Printter");

        addio_Printter.setFont(new java.awt.Font("Unispace", 1, 10)); // NOI18N
        addio_Printter.setForeground(new java.awt.Color(20, 33, 61));
        addio_Printter.setText("Add I/O");
        addio_Printter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addio_PrintterActionPerformed(evt);
            }
        });

        EndioPrintter.setFont(new java.awt.Font("Unispace", 1, 10)); // NOI18N
        EndioPrintter.setForeground(new java.awt.Color(20, 33, 61));
        EndioPrintter.setText("End I/O");
        EndioPrintter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EndioPrintterActionPerformed(evt);
            }
        });

        tb_RunCPU.setBackground(new java.awt.Color(252, 163, 17));
        tb_RunCPU.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        tb_RunCPU.setForeground(new java.awt.Color(20, 33, 61));
        tb_RunCPU.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ProcessID", "Status"
            }
        ));
        tb_RunCPU.setRowHeight(22);
        jScrollPane3.setViewportView(tb_RunCPU);

        jLabel3.setFont(new java.awt.Font("Constantia", 0, 26)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(252, 163, 17));
        jLabel3.setText("CPU");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 37, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(95, 95, 95))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                            .addComponent(addio_Printter, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(EndioPrintter, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(26, 26, 26)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(addiomonitor)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Endmoniter))
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(85, 85, 85))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(110, 110, 110))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Endmoniter)
                    .addComponent(addiomonitor, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addio_Printter, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EndioPrintter, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        jPanel6.setBackground(new java.awt.Color(20, 33, 61));

        tb_IOQ.setBackground(new java.awt.Color(252, 163, 17));
        tb_IOQ.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        tb_IOQ.setForeground(new java.awt.Color(20, 33, 61));
        tb_IOQ.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ProcessID", "State"
            }
        ));
        tb_IOQ.setRowHeight(22);
        jScrollPane1.setViewportView(tb_IOQ);

        jLabel11.setFont(new java.awt.Font("Constantia", 1, 28)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(252, 163, 17));
        jLabel11.setText("I/O Queue");

        tbl_IOQ2.setBackground(new java.awt.Color(252, 163, 17));
        tbl_IOQ2.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        tbl_IOQ2.setForeground(new java.awt.Color(20, 33, 61));
        tbl_IOQ2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ProcessID", "State"
            }
        ));
        tbl_IOQ2.setRowHeight(22);
        jScrollPane10.setViewportView(tbl_IOQ2);

        jLabel13.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(252, 163, 17));
        jLabel13.setText("Printter");

        jLabel15.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(252, 163, 17));
        jLabel15.setText("Monitor ");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(76, 76, 76))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel15)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(43, 43, 43))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBackground(new java.awt.Color(20, 33, 61));

        tb_Terminat.setBackground(new java.awt.Color(252, 163, 17));
        tb_Terminat.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        tb_Terminat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ProseccID", "State", "Arrival Time", "Burst Time", "Waiting Time", "Turnaround Time"
            }
        ));
        tb_Terminat.setRowHeight(22);
        jScrollPane4.setViewportView(tb_Terminat);

        jLabel4.setFont(new java.awt.Font("Constantia", 1, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(252, 163, 17));
        jLabel4.setText("Terminate");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(194, 194, 194))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 625, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        jPanel8.setBackground(new java.awt.Color(20, 33, 61));

        tb_Ready.setBackground(new java.awt.Color(252, 163, 17));
        tb_Ready.setBorder(new javax.swing.border.MatteBorder(null));
        tb_Ready.setFont(new java.awt.Font("Consolas", 1, 20)); // NOI18N
        tb_Ready.setForeground(new java.awt.Color(20, 33, 61));
        tb_Ready.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ProcessID", "Arrival Time", "Priority"
            }
        ));
        tb_Ready.setRowHeight(22);
        jScrollPane2.setViewportView(tb_Ready);

        jLabel2.setFont(new java.awt.Font("Constantia", 1, 28)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(252, 163, 17));
        jLabel2.setText("Ready Queue");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(64, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(155, 155, 155))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                .addGap(30, 30, 30))
        );

        jLabel5.setBackground(new java.awt.Color(20, 33, 61));
        jLabel5.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(20, 33, 61));
        jLabel5.setText("Clock ");

        time.setBackground(new java.awt.Color(20, 33, 61));
        time.setFont(new java.awt.Font("Unispace", 1, 18)); // NOI18N
        time.setForeground(new java.awt.Color(20, 33, 61));
        time.setText("0");

        jLabel6.setBackground(new java.awt.Color(20, 33, 61));
        jLabel6.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(20, 33, 61));
        jLabel6.setText("ms.");

        jProgressBar.setFont(new java.awt.Font("Unispace", 1, 14)); // NOI18N
        jProgressBar.setStringPainted(true);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(11, 11, 11))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(avgW)
                                        .addGap(126, 126, 126)))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(70, 70, 70)
                                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(28, 28, 28))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(avgT)
                                        .addGap(167, 167, 167))))
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 1314, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnadd, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(77, 77, 77)
                                        .addComponent(time)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel6))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(60, 60, 60)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(59, 59, 59)
                                .addComponent(btnterminate, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(365, 365, 365)
                                        .addComponent(jLabel12))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(361, 361, 361)
                                        .addComponent(jProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(499, 499, 499)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(71, 71, 71)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnadd, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnterminate, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(time)
                                            .addComponent(jLabel6)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10)
                                    .addComponent(avgT))
                                .addGap(18, 18, 18)
                                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(avgW))
                                .addGap(18, 18, 18)
                                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(97, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    @SuppressWarnings("empty-statement")


    private void btnaddActionPerformed(java.awt.event.ActionEvent evt) {                                       

        Chprogress();


    }                                      

    private void btnterminateActionPerformed(java.awt.event.ActionEvent evt) {                                             
        controller.processTerminate(count);
        jProgressBar.setValue(controller.Progressb());
        showMainPCB(controller.showMain()); //tabel JOBQueue
        showready(controller.showready());
        showtnate(controller.showTerminate());

    }                                            

    private void addiomonitorActionPerformed(java.awt.event.ActionEvent evt) {                                             

        controller.AddprocessIOmonitor(count);
        showaddio(controller.showMonitor());
        showIOQ(controller.showIOQ());
      

    }                                            

    private void EndmoniterActionPerformed(java.awt.event.ActionEvent evt) {                                           
       controller.EndIOmonitor();
        showaddio(controller.showMonitor());
        


    }                                          

    private void addio_PrintterActionPerformed(java.awt.event.ActionEvent evt) {                                               
       controller.AddprocessIO(count);
        showaddio2(controller.showPrintter());
        showIOQ2(controller.showIOQ1());

    }                                              

    private void EndioPrintterActionPerformed(java.awt.event.ActionEvent evt) {                                              

        controller.EndIOPrintter();
      showaddio2(controller.showPrintter());
        
    }                                             

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new view().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify                     
    private javax.swing.JButton EndioPrintter;
    private javax.swing.JButton Endmoniter;
    private javax.swing.JTable MainPCB;
    private javax.swing.JButton addio_Printter;
    private javax.swing.JButton addiomonitor;
    private javax.swing.JLabel avgT;
    private javax.swing.JLabel avgW;
    private javax.swing.JButton btnadd;
    private javax.swing.JButton btnterminate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JProgressBar jProgressBar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTable jTable5;
    private javax.swing.JTable jTable7;
    private javax.swing.JTable tb_IOQ;
    private javax.swing.JTable tb_Printter;
    private javax.swing.JTable tb_Ready;
    private javax.swing.JTable tb_RunCPU;
    private javax.swing.JTable tb_Terminat;
    private javax.swing.JTable tb_monitor;
    private javax.swing.JTable tbl_IOQ2;
    private javax.swing.JLabel time;
    // End of variables declaration                   

//public void showclock(Model model){
//    clock1.setText(Integer.toString(model.getCount()));
//   
//}
//
//  public void terminate(Model m){
//      DefaultTableModel terminate = (DefaultTableModel)jTable4.getModel();
//      terminate.addRow(new Object[]{m.getProcessID(),"Terminate",m.getCount(),m.getWaitingtime(),m.getIotime(),m.getPriority(),m.getArrivaltime(),"1Gb"});
//  }
//  public void jobqeueu(Model m){
//       DefaultTableModel terminate = (DefaultTableModel)jTable7.getModel();
//      terminate.addRow(new Object[]{m.getProcessID(),"Running"});
//      
//  }
    public void showMainPCB(String text) {
        try {
            DefaultTableModel model1 = (DefaultTableModel) MainPCB.getModel();
            int rowCount = model1.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                model1.removeRow(i);
            }

            String[] textTable2 = text.split(",");
            for (int index = 0; index < textTable2.length; index++) {
                String[] textTable1 = textTable2[index].split(" ");

                model1.addRow(new Object[]{"   P" + textTable1[0], textTable1[1], "  " + textTable1[2] + " ms", "  " + textTable1[3] + " ms", "  " + textTable1[4] + " ms", "  " + textTable1[5], "  " + textTable1[6] + " ms", " " + textTable1[7] + " Mb"});

            }
        } catch (java.lang.IndexOutOfBoundsException e) {

        }
    }

    public void showtnate(String text) {
        try {
            DefaultTableModel model4 = (DefaultTableModel) tb_Terminat.getModel();
            int rowCount = model4.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                model4.removeRow(i);
            }
            String[] textTable4 = text.split(",");
            for (int index = 0; index < textTable4.length; index++) {
                String[] textTable1 = textTable4[index].split(" ");
                model4.addRow(new Object[]{"  P" + textTable1[0], textTable1[1], "  " + textTable1[2] + " ms", "    " + textTable1[3] + " ms", "    " + textTable1[4] + " ms", "  " + textTable1[5] + " ms"});

            }
        } catch (ArrayIndexOutOfBoundsException e) {

        }

    }

    public void showaddio(String text) {
        try {
            DefaultTableModel model5 = (DefaultTableModel) tb_monitor.getModel();
            int rowCount = model5.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                model5.removeRow(i);
            }
            String[] textTable4 = text.split(",");
            for (int index = 0; index < textTable4.length; index++) {
                String[] textTable1 = textTable4[0].split(" ");
                model5.addRow(new Object[]{"   P" + textTable1[0], textTable1[1], textTable1[2] + " ms"});
                break;
            }
        } catch (ArrayIndexOutOfBoundsException e) {

        }
    }

    public void showCpu(String text) {
        try {
            DefaultTableModel model5 = (DefaultTableModel) tb_RunCPU.getModel();
            int rowCount = model5.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                model5.removeRow(i);
            }
            String[] textTable4 = text.split(",");
            for (int index = 0; index < textTable4.length; index++) {
                String[] textTable1 = textTable4[0].split(" ");
                model5.addRow(new Object[]{"   P" + textTable1[0], textTable1[1]});
                break;
            }
        } catch (ArrayIndexOutOfBoundsException e) {

        }
    }

  public void showIOQ(String text) {
        try {
            DefaultTableModel model5 = (DefaultTableModel) tb_IOQ.getModel();
            int rowCount = model5.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                model5.removeRow(i);
            }
            String[] textTable4 = text.split(",");
            for (int index = 1; index < textTable4.length; index++) {
                String[] textTable1 = textTable4[index].split(" ");
                model5.addRow(new Object[]{"   P" + textTable1[0], textTable1[1]});
             
            }
        } catch (ArrayIndexOutOfBoundsException e) {

        }
    }
   public void showIOQ2(String text) {
        try {
            DefaultTableModel model5 = (DefaultTableModel) tbl_IOQ2.getModel();
            int rowCount = model5.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                model5.removeRow(i);
            }
            String[] textTable4 = text.split(",");
            for (int index = 1; index < textTable4.length; index++) {
                String[] textTable1 = textTable4[index].split(" ");
                model5.addRow(new Object[]{"   P" + textTable1[0], textTable1[1]});
               
            }
        } catch (ArrayIndexOutOfBoundsException e) {

        }
    }
    

    public void showaddio2(String text) {
        try {
            DefaultTableModel model5 = (DefaultTableModel) tb_Printter.getModel();
            int rowCount = model5.getRowCount();
            for (int i = rowCount - 1; i >= 0; i--) {
                model5.removeRow(i);
            }
            String[] textTable4 = text.split(",");
            for (int index = 0; index < textTable4.length; index++) {
                String[] textTable1 = textTable4[0].split(" ");
                model5.addRow(new Object[]{"   P" + textTable1[0], textTable1[1], textTable1[2] + " ms"});
                break;
            }
        } catch (ArrayIndexOutOfBoundsException e) {

        }
    }

    public void showready(String text) {
        try {
            DefaultTableModel model2 = (DefaultTableModel) tb_Ready.getModel();
            int rowCount = model2.getRowCount();

            for (int i = rowCount - 1; i >= 0; i--) {
                model2.removeRow(i);
            }
            String[] textTable4 = text.split(",");
            for (int index = 1; index < textTable4.length; index++) {
                String[] textTable1 = textTable4[index].split(" ");
                model2.addRow(new Object[]{"   P" + textTable1[0], "  " + textTable1[1] + " ms", "  " + textTable1[2]});
            }
        } catch (ArrayIndexOutOfBoundsException e) {

        }
    }

    void setEnableButton() {
        if (MainPCB.getRowCount() == 0) {
            jProgressBar.setValue(0);
            btnterminate.setEnabled(false);
            addiomonitor.setEnabled(false);
            Endmoniter.setEnabled(false);
            addio_Printter.setEnabled(false);
            EndioPrintter.setEnabled(false);

        } else {
            jProgressBar.setValue(controller.Progressb());
            btnterminate.setEnabled(true);
            addiomonitor.setEnabled(true);
            Endmoniter.setEnabled(true);
            addio_Printter.setEnabled(true);
            EndioPrintter.setEnabled(true);
        }
            if (tb_RunCPU.getRowCount() == 0) {
                addiomonitor.setEnabled(false);
                addio_Printter.setEnabled(false);
                if (tb_RunCPU.getRowCount() == 0 && tb_Printter.getRowCount() == 0) {
                    addiomonitor.setEnabled(false);

                }
                if (tb_RunCPU.getRowCount() == 0 && tb_monitor.getRowCount() == 0) {
                    addio_Printter.setEnabled(false);
                    EndioPrintter.setEnabled(false);
                }
            }
            if(tb_Ready.getRowCount() == 0 && MainPCB.getRowCount() != 0){
                btnterminate.setEnabled(true);
            }

            if(MainPCB.getRowCount() != 0 && tb_monitor.getRowCount() <= 1){
                Endmoniter.setEnabled(true);
                EndioPrintter.setEnabled(true);
            }
        
        if (tb_RunCPU.getRowCount() == 0) {
            btnterminate.setEnabled(false);
        }

        if (tb_monitor.getRowCount() != 0) {

            addiomonitor.setEnabled(true);
            Endmoniter.setEnabled(true);

        } else {
            Endmoniter.setEnabled(false);

        }

        if (tb_Printter.getRowCount() != 0) {

            addio_Printter.setEnabled(true);
            EndioPrintter.setEnabled(true);
        } else {

            EndioPrintter.setEnabled(false);

        }

    }

    void avg() {
        avgT.setText(controller.AvgTurnaround() + " ms");
        avgW.setText(controller.AvgWaiting() + " ms");
       

    }

    public void ClockTime(Model model) {

        TimerTask task;
        task = new TimerTask() {
            public void run() {
                count++;

                time.setText(Integer.toString(count));
                controller.sortPriority();
                controller.CpuBurstTime(count);
                controller.CheckIOPrintter();
                controller.CheckIOmonitor();
                controller.TimeIOPrintter(count);
                controller.TimeIOmonitor(count);
                controller.Countwaitting(count);
                avg();
                showMainPCB(controller.showMain());
                showready(controller.showready());
                showCpu(controller.showCpu());
                showaddio(controller.showMonitor());
                showaddio2(controller.showPrintter());
                showIOQ(controller.showIOQ());
                showIOQ2(controller.showIOQ1());
                showtnate(controller.showTerminate());

            }
        };

        clocktime.scheduleAtFixedRate(task, 1000, 1000);
    }

    public void ClockioTime(Model model) {
        TimerTask io = new TimerTask() {
            public void run() {
                count2++;
                setEnableButton();
            }
        };

        iotime.scheduleAtFixedRate(io, 1, 1);
    }

    public void Chprogress() {
        if (controller.Progressb() > 97) {
            JOptionPane.showMessageDialog(null,
                    "The memory is currently busy. Please close any running programs. then open the program again.",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        } else {
            jProgressBar.setValue(controller.Progressb());
            addiomonitor.setEnabled(true);
            controller.addProcess(count);
            showMainPCB(controller.showMain());
            showready(controller.showready());

        }
    }

}
